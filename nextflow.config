/*
 * -------------------------------------------------
 *  ICGC-FeatureCounts Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */


manifest {
  description = 'Example RNA-seq pipeline for ENCODE data on AWS Batch implemented with Nextflow' 
}

// Global default params, used in configs
params {

  version = "1.0.0dev" // Pipeline version
  container = 'nextflow/rnaseq-nf' // Container slug. Stable releases should specify release tag!
  nf_required_version = '0.30.2' // Minimum version of nextflow required

  help = false
  outdir = './results'

  //Default values for AWSBatch (Queue, Region, Workdir)
  awsqueue = 'nextflow-batch'
  awsregion = 'us-west-2'
  workDir = 's3://aws-genomics-nextflow/'
}


// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "./pipeline_info/timeline.html"
}
report {
  enabled = true
  file = "./pipeline_info/report.html"
}
trace {
  enabled = true
  file = "./pipeline_info/trace.txt"
}
dag {
  enabled = true
  file = "./pipeline_info/dag.svg"
}


/*
 * -------------------------------------------------
 *  ICGC-FeatureCounts Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

process {

  container = params.container

//  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
//  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
//  time = { check_max( 2.h * task.attempt, 'time' ) }

// process specific cpu and memory definitions, taken from fstrozzi/rnaseq-encode-nf and nextflow.io/rnaseq-nf 

  $index.cpus = 4 
  $fastqc.cpus = 2
  $quant.cpus = 8
  $index.memory = '30 GB'
  $quant.memory = '16 GB' 
  $fastqc.memory = '8 GB'
  $multiqc.memory = '8 GB'

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  // Process-specific resource requirements
  //Different container provided from ICGC/TCGA directly
  withName:fetch_encrypted_s3_url {
    container = 'overture/score'
  }

  withName:workflow_summary_mqc{
    memory = 800.MB
    cpus = 1
  }



}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 40.GB
  max_cpus = 40
  max_time = 240.h
  // igenomes_base = 's3://ngi-igenomes/igenomes/'
}

/*
 * -------------------------------------------------
 *  Nextflow config file for AWSBatch
 * -------------------------------------------------
 * Imported under the 'aws' Nextflow profile in nextflow.config
 * Defines reference genomes, using iGenome paths from s3
 * Uses docker for software depedencies.
 */

batch {
    workDir = params.workDir
    process.executor = 'awsbatch'
    process.queue = params.awsqueue
    aws.region = params.awsregion    
  }

executor {
  awscli = '/home/ec2-user/miniconda/bin/aws'
}

docker {
  enabled = true
}

cloud {
  imageId = 'ami-7c97d804'
  instanceType = 't2.micro'
  keyName = 'alper-uswest2-keypair'
  userName = 'ec2-user'
  securityGroup = 'sg-8b3100fa'
}
